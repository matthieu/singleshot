#!/usr/bin/env ruby
# Singleshot  Copyright (C) 2008-2009  Intalio, Inc
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


require File.dirname(__FILE__) + '/../config/boot'
require 'rake'
verbose false
#require 'rubygems'
#require 'yaml'
#require 'rubygems/source_info_cache'


def check(message)
  message = message[0, 70]
  puts "## %s ...\n" % message
  yield
  puts
end

def rake(*args)
  ruby '-S', 'rake', '--silent', *args
end

def gem_install(name, options)
  dep = Gem::Dependency.new(name, options[:version] || '>= 0')
  if Gem::SourceIndex.from_installed_gems.search(dep).empty?
    check "Installing #{name} ..." do
      ruby *%W{-S gem install #{name} -v #{options[:version].to_s} --source http://gems.rubyforge.org --source http://gems.github.com}
    end
  end
end


# If running on previous version of Rails, upgrades to the most recent one.
gem_install 'rails', 'version'=>Rails::GemBoot.gem_version
$gems_rake_task = true
# We need to install all dependency Gems for the current environment.
# Some missing Gems don't allow rake gems:install to run successfully,
# so we get around it by safe loading environment.rb and running gem
# install outselves.
require "#{RAILS_ROOT}/config/environment"
Rails.configuration.gems.each do |gem|
  gem_install gem.name, :version=>gem.requirement.to_s
end

# The plugins we maintain in vendor/plugins.
=begin
$plugins = 'git://github.com/assaf/presenter.git'
check "Installing/updating plugins" do
  $plugins.each do |url|
    name, path = url.pathmap('%n'), url.pathmap('vendor/plugins/%n')
    if Dir["#{path}/*"].empty?
      sh "braid add -p #{url.inspect}"
      fail "Plugin #{name} not installed! (looked for it in #{path})" if Dir["#{path}/*"].empty?
    else
      sh "braid update #{path}"
    end
  end
end
=end


# The secret.key is not so secret if you check it from public Git repo,
# so we have to create one when installing Singleshot.
check "Creating new secret key in secret.key" do
  rake 'secret.key'
end


check "Creating a new database" do
  db = YAML.load_file("config/database.yml")['development']
  puts "I'm going to create the databse #{db['database']} (#{db['adapter']}) using the account #{db['username']}, password #{db['password']}"
  rake "db:create"
end
check "Running all migrations against the new database" do
  rake "db:migrate:reset"
end
check "Populating development database with mock data" do
  rake "db:populate"
end
check "Creating a clone test database" do
  db = YAML.load_file("config/database.yml")['development']
  p "I'm going to create the databse #{db['database']} (#{db['adapter']}) using the account #{db['username']}, password #{db['password']}"
  rake "db:test:clone"
end


puts <<TEXT
Done!


   (  (
    )  )
 |_______|--|
 |       |  |
 |       |_/
  \\_____/
 

Delicously fresh ascii coffee, on the house.

To start the server:
  ./script/server

Next, open http://localhost:3000 in your browser and login with
  username:  #{ENV['USER']}
  password:  secret

Have fun!
TEXT
